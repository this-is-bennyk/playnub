# MIT License
# 
# Copyright (c) 2025 Ben Kurtin
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

class_name InputEventFaux
extends InputEventAction

## Represents a recorded input generated by an [InputRecord].
## 
## Used by the [Automator] to playback user sessions, and can be used to create
## in-game match records.

var _values: Dictionary[StringName, Variant] = {}

## Returns an [int] from the recorded input with the name given by [param key].
func get_int(key: StringName) -> int:
	return _values[key] as int

## Returns a [float] from the recorded input with the name given by [param key].
func get_float(key: StringName) -> float:
	return _values[key] as float

## Returns a [bool] from the recorded input with the name given by [param key].
func get_bool(key: StringName) -> bool:
	return _values[key] as bool

## Returns a [Vector2] from the recorded input with the name given by [param key].
func get_vec2(key: StringName) -> Vector2:
	return _values[key] as Vector2

## Returns a [StringName] from the recorded input with the name given by [param key].
func get_string_name(key: StringName) -> StringName:
	return _values[key] as StringName

func _init(parsed_event: Dictionary[StringName, Variant]) -> void:
	var flat_dict := (parsed_event[&"props"] as Array)
	var index := 0
	
	while index < flat_dict.size():
		_values[flat_dict[index]] = JSON.to_native(flat_dict[index + 1])
		index += 2
